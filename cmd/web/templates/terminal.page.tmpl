{{template "base" .}}

{{define "title"}}
Virtual Terminal
{{end}}

{{define "content"}}
<main class="max-h-full lg:flex lg:min-h-full lg:flex-row-reverse lg:overflow-hidden">
  <h1 class="sr-only">Checkout</h1>

  <!-- Mobile order summary -->
  <section aria-labelledby="order-heading" class="px-4 py-6 bg-gray-50 sm:px-6 lg:hidden">
    <div class="max-w-lg mx-auto">
      <div class="flex items-center justify-between">
        <h2 id="order-heading" class="text-lg font-medium text-gray-900">Your Order</h2>
        <button type="button" class="font-medium text-indigo-600 hover:text-indigo-500" aria-controls="disclosure-1"
          aria-expanded="false">
          <!-- Only display for open option. -->
          <span>Hide full summary</span>
          <!-- Don't display for open option. -->
          <span>Show full summary</span>
        </button>
      </div>

      <div id="disclosure-1">
        <ul role="list" class="border-b border-gray-200 divide-y divide-gray-200">
          <li class="flex py-6 space-x-6">
            <img src="https://tailwindui.com/img/ecommerce-images/checkout-form-04-product-01.jpg"
              alt="Off-white t-shirt with circular dot illustration on the front of mountain ridges that fade."
              class="flex-none object-cover object-center w-40 h-40 bg-gray-200 rounded-md">
            <div class="flex flex-col justify-between space-y-4">
              <div class="space-y-1 text-sm font-medium">
                <h3 class="text-gray-900">Mountain Mist Artwork Tee</h3>
                <p class="text-gray-900">$36.00</p>
                <p class="text-gray-500">Birch</p>
                <p class="text-gray-500">L</p>
              </div>
              <div class="flex space-x-4">
                <button type="button" class="text-sm font-medium text-indigo-600 hover:text-indigo-500">Edit</button>
                <div class="flex pl-4 border-l border-gray-300">
                  <button type="button"
                    class="text-sm font-medium text-indigo-600 hover:text-indigo-500">Remove</button>
                </div>
              </div>
            </div>
          </li>

          <!-- More products... -->
        </ul>

        <form class="mt-10">
          <label for="discount-code-mobile" class="block text-sm font-medium text-gray-700">Discount code</label>
          <div class="flex mt-1 space-x-4">
            <input type="text" id="discount-code-mobile" name="discount-code-mobile"
              class="block w-full border-gray-300 rounded-md shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm">
            <button type="submit"
              class="px-4 text-sm font-medium text-gray-600 bg-gray-200 rounded-md hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 focus:ring-offset-gray-50">Apply</button>
          </div>
        </form>

        <dl class="mt-10 space-y-6 text-sm font-medium text-gray-500">
          <div class="flex justify-between">
            <dt>Subtotal</dt>
            <dd class="text-gray-900">$108.00</dd>
          </div>
          <div class="flex justify-between">
            <dt class="flex">
              Discount
              <span
                class="ml-2 rounded-full bg-gray-200 px-2 py-0.5 text-xs tracking-wide text-gray-600">CHEAPSKATE</span>
            </dt>
            <dd class="text-gray-900">-$16.00</dd>
          </div>
          <div class="flex justify-between">
            <dt>Taxes</dt>
            <dd class="text-gray-900">$9.92</dd>
          </div>
          <div class="flex justify-between">
            <dt>Shipping</dt>
            <dd class="text-gray-900">$8.00</dd>
          </div>
        </dl>
      </div>

      <p class="flex items-center justify-between pt-6 mt-6 text-sm font-medium text-gray-900 border-t border-gray-200">
        <span class="text-base">Total</span>
        <span class="text-base">$141.92</span>
      </p>
    </div>
  </section>

  <!-- Order summary -->
  <section aria-labelledby="summary-heading" class="flex-col hidden w-full max-w-md overflow-y-auto bg-gray-50 lg:flex">
    <h2 id="summary-heading" class="sr-only">Order summary</h2>

    <ul role="list" class="flex-auto px-6 overflow-y-auto divide-y divide-gray-200">
      <li class="flex py-6 space-x-6">
        <img src="https://tailwindui.com/img/ecommerce-images/checkout-form-04-product-01.jpg"
          alt="Off-white t-shirt with circular dot illustration on the front of mountain ridges that fade."
          class="flex-none object-cover object-center w-40 h-40 bg-gray-200 rounded-md">
        <div class="flex flex-col justify-between space-y-4">
          <div class="space-y-1 text-sm font-medium">
            <h3 class="text-gray-900">Mountain Mist Artwork Tee</h3>
            <p class="text-gray-900">$36.00</p>
            <p class="text-gray-500">Birch</p>
            <p class="text-gray-500">L</p>
          </div>
          <div class="flex space-x-4">
            <button type="button" class="text-sm font-medium text-indigo-600 hover:text-indigo-500">Edit</button>
            <div class="flex pl-4 border-l border-gray-300">
              <button type="button" class="text-sm font-medium text-indigo-600 hover:text-indigo-500">Remove</button>
            </div>
          </div>
        </div>
      </li>

      <!-- More products... -->
    </ul>

    <div class="sticky bottom-0 flex-none p-6 border-t border-gray-200 bg-gray-50">
      <form>
        <label for="discount-code" class="block text-sm font-medium text-gray-700">Discount code</label>
        <div class="flex mt-1 space-x-4">
          <input type="text" id="discount-code" name="discount-code"
            class="block w-full border-gray-300 rounded-md shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm">
          <button type="submit"
            class="px-4 text-sm font-medium text-gray-600 bg-gray-200 rounded-md hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 focus:ring-offset-gray-50">Apply</button>
        </div>
      </form>

      <dl class="mt-10 space-y-6 text-sm font-medium text-gray-500">
        <div class="flex justify-between">
          <dt>Subtotal</dt>
          <dd class="text-gray-900">$108.00</dd>
        </div>
        <div class="flex justify-between">
          <dt class="flex">
            Discount
            <span
              class="ml-2 rounded-full bg-gray-200 px-2 py-0.5 text-xs tracking-wide text-gray-600">CHEAPSKATE</span>
          </dt>
          <dd class="text-gray-900">-$16.00</dd>
        </div>
        <div class="flex justify-between">
          <dt>Taxes</dt>
          <dd class="text-gray-900">$9.92</dd>
        </div>
        <div class="flex justify-between">
          <dt>Shipping</dt>
          <dd class="text-gray-900">$8.00</dd>
        </div>
        <div class="flex items-center justify-between pt-6 text-gray-900 border-t border-gray-200">
          <dt>Total</dt>
          <dd class="text-base">$141.92</dd>
        </div>
      </dl>
    </div>
  </section>

  <!-- Checkout form -->
  <section aria-labelledby="payment-heading"
    class="flex-auto px-4 pt-12 pb-16 overflow-y-auto sm:px-6 sm:pt-16 lg:px-8 lg:pb-24 lg:pt-0">
    <h2 id="payment-heading" class="sr-only">Payment and shipping details</h2>

    <div class="max-w-lg mx-auto lg:pt-16">
      <form class="" name="charge-form" id="charge-form">
        <div class="grid grid-cols-12 gap-x-4 gap-y-6">
          <div id="card-messages" role="alert" class="hidden py-2 px-4 rounded bg-neutral-200 shadow-lg"></div>

          <div class="col-span-full">
            <div id="link-authentication-element" class="mb-2">
            </div>
            <div class="mb-2" id="address-element">
            </div>
            <div id="payment-element" class="mb2">
            </div>
            <div class="hidden alert-error" id="card-errors" role="alert"></div>
            <div class="hidden alert-success" id="card-success" role="alert"></div>
          </div>
        </div>

        <button type="submit" id="pay-button"
          class="flex justify-center w-full px-4 py-2 mt-6 text-sm font-medium text-center text-white bg-indigo-600 border border-transparent rounded-md shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2">
          <span id="button-text">Charge Card</span>
          <span class="hidden" id="spinner" role="status">
            <svg class="w-5 h-5 mr-3 -ml-1 text-white animate-spin" xmlns="http://www.w3.org/2000/svg" fill="none"
              viewBox="0 0 24 24">
              <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
              <path class="opacity-75" fill="currentColor"
                d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z">
              </path>
            </svg>
            <span class="sr-only">processing payment...</span>
          </span>
        </button>

        <p class="flex justify-center mt-6 text-sm font-medium text-gray-500">
          <svg class="mr-1.5 h-5 w-5 text-gray-400" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
            <path fill-rule="evenodd"
              d="M10 1a4.5 4.5 0 00-4.5 4.5V9H5a2 2 0 00-2 2v6a2 2 0 002 2h10a2 2 0 002-2v-6a2 2 0 00-2-2h-.5V5.5A4.5 4.5 0 0010 1zm3 8V5.5a3 3 0 10-6 0V9h6z"
              clip-rule="evenodd" />
          </svg>
          Payment details stored in plain text
        </p>
      </form>
    </div>
  </section>
</main>
{{end}}

{{define "js"}}
<script src="https://js.stripe.com/v3/"></script>

<script type="module">
  import {addMessage} from "/static/scripts/utils.js"

  let stripe;
  let elements;
  const cardMessages = document.getElementById('card-messages');
  const payButton = document.getElementById('pay-button');
  
  document.addEventListener('DOMContentLoaded', async () => {
    document
      .querySelector("#charge-form")
      .addEventListener("submit", handleSubmit);

    await initialize();
    await checkStatus();
  })

  async function initialize() {
    // Load the publishable key from the server. The publishable key
    // is set in your .env file.
    const {publishableKey} = await fetch('/stripe-config').then((r) => r.json());
    if (!publishableKey) {
      addMessage(
        'No publishable key returned from the server. Please check `.env` and try again'
      );
      alert('Please set your Stripe publishable API key in the .env file');
    }

    stripe = Stripe(publishableKey);

    // On page load, we create a PaymentIntent on the server so that we have its clientSecret to
    // initialize the instance of Elements below. The PaymentIntent settings configure which payment
    // method types to display in the PaymentElement.
    const {
      clientSecret
    } = await fetch('/create-payment-intent').then(r => r.json());

    // Initialize Stripe Elements with the PaymentIntent's clientSecret,
    // then mount the payment element.
    const appearance = {
      theme: 'stripe',
      labels: 'floating',
    };

    const options = {
      mode: "billing",
    }
    elements = stripe.elements({
      clientSecret,
      fonts: [{
        cssSrc: ""
      }],
      appearance,
    });
    const addressElement = elements.create('address', options);
    const paymentElement = elements.create('payment');
    addressElement.mount('#address-element');
    paymentElement.mount('#payment-element');
    // Create and mount the linkAuthentication Element to enable autofilling customer payment details
    const linkAuthenticationElement = elements.create("linkAuthentication");
    linkAuthenticationElement.mount("#link-authentication-element");
  }

  async function handleSubmit(event) {
    event.preventDefault();
    // Disable the Pay button to prevent multiple click events.
    setLoading(true);

    const {error, paymentIntent} = await stripe.confirmPayment({
      elements,
      confirmParams: {
        return_url: window.location.href,
      },
    });

    if (error) {
      setLoading(false);
      console.log("error", error)
    } else if (paymentIntent.status === 'succeeded') {
      addMessage(`Payment succeeded!`);
      // Show a success message to your customer.
      // There's a risk of the customer closing the window before callback
      // execution. Set up a webhook or plugin to listen for the
      // payment_intent.succeeded event that handles any business critical
      // post-payment actions.
      // window.location.href = "/payment-succeeded";
    }
  }

  // Fetches the payment intent status after payment submission
  async function checkStatus() {
    const clientSecret = new URLSearchParams(window.location.search).get(
      "payment_intent_client_secret"
    );

    if (!clientSecret) {
      return;
    }

    const { paymentIntent } = await stripe.retrievePaymentIntent(clientSecret);

    switch (paymentIntent.status) {
      case "succeeded":
        addMessage("Payment succeeded!");
        break;
      case "processing":
        addMessage("Your payment is processing.");
        break;
      case "requires_payment_method":
        addMessage("Your payment was not successful, please try again.");
        break;
      default:
        addMessage("Something went wrong.");
        break;
    }
  }

  // Show a spinner on payment submission
  function setLoading(isLoading) {
    console.log("setLoading", isLoading)
    if (isLoading) {
      // Disable the button and show a spinner
      document.querySelector("#pay-button").disabled = true;
      document.querySelector("#spinner").classList.remove("hidden");
      document.querySelector("#button-text").classList.add("hidden");
    } else {
      document.querySelector("#pay-button").disabled = false;
      document.querySelector("#spinner").classList.add("hidden");
      document.querySelector("#button-text").classList.remove("hidden");
    }
  }
</script>
{{end}}
